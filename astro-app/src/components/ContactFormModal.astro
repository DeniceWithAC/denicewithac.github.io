---
import { Icon } from "astro-icon/components";
import ContactForm from "./ContactForm.astro";
---

<contact-form-modal class="flex justify-center">
    
    <button
		class="relative flex items-center justify-center h-10 px-6 rounded-lg shadow-lg hover:brightness-110 transition-all bg-gradient-to-r from-accent-one to-accent-two"
		data-open-modal>
        <span class="text-bgColor font-semibold">
		    Get in touch
        </span>
	</button>

	<dialog
		aria-label="Contact Form"
		class="h-full max-h-full w-full max-w-full md:h-fit bg-bgColor backdrop:backdrop-blur-xl md:my-8 md:min-h-[6.5rem] 'md:w-5/6' md:max-w-[44rem] md:rounded-lg overflow-y-hidden">	
		<div class="dialog-frame flex flex-col h-[100%] px-4 pt-4 pb-4 md:px-8 md:py-8 gap-4">
			<div class="md:hidden sticky top-0 z-20 flex items-center justify-between bg-bgColor">
				<h4 class="title flex items-end font-semibold">Contact Me</h4>
			 	<button
					class="flex size-8 cursor-pointer items-center justify-center rounded-lg bg-color-100 text-textColor hover:text-accent-base hover:bg-accent-base/5"
					data-close-modal>	
					<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="hugeicons:cancel-01" />
				</button>
			</div>
			
			<div class="contact-form-container h-full">
				<ContactForm />
			</div>
		</div>
	</dialog>
</contact-form-modal>

<script>
	class ContactFormModal extends HTMLElement {
		private closeBtn: HTMLButtonElement;
		private dialog: HTMLDialogElement;
		private dialogFrame: HTMLDivElement;
		private openBtn: HTMLButtonElement;

		closeModal = () => {
			if (this.dialog.open) {
				this.dialog.close();
				document.body.classList.remove("overflow-hidden");
				window.removeEventListener("click", this.onWindowClick);
			}
		};

		onWindowClick = (event: MouseEvent) => {
			const isLink = "href" in (event.target || {});
			if (
				isLink ||
				(document.body.contains(event.target as Node) &&
					!this.dialogFrame.contains(event.target as Node))
			)
				this.closeModal();
		};

		openModal = (event?: MouseEvent) => {
			this.dialog.showModal();
			document.body.classList.add("overflow-hidden");
			event?.stopPropagation();
			window.addEventListener("click", this.onWindowClick);
		};

		constructor() {
			super();
			this.openBtn = this.querySelector<HTMLButtonElement>("button[data-open-modal]")!;
			this.closeBtn = this.querySelector<HTMLButtonElement>("button[data-close-modal]")!;
			this.dialog = this.querySelector("dialog")!;
			this.dialogFrame = this.querySelector(".dialog-frame")!;

			this.openBtn.addEventListener("click", this.openModal);
			this.closeBtn.addEventListener("click", this.closeModal);
		}
	}

	customElements.define("contact-form-modal", ContactFormModal);
</script>

<style is:global>
	/* Add any specific styles for the contact form modal here if needed */
</style>
